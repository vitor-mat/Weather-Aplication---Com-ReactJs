{"version":3,"sources":["reportWebVitals.js","components/header.js","components/cards/tables.js","images/main/card/high-temperature-image.png","images/main/card/low-temperature-image.png","components/cards/temperatures.js","components/cards/coordinates.js","components/cards/names.js","components/card.js","components/main.js","components/footer.js","components/app.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","require","props","useState","city","setCity","country","setCountry","description","setDescription","temperature","setTemperature","humidity","setHumidity","pressure","setPressure","lat","setLat","long","setLong","name","a","url","requisition","data","sys","weather","coord","lon","Number","main","temp","toFixed","weatherData","console","log","newCity","changeCity","newCountry","newDescription","newTemperature","newHumidity","newPressure","newLat","newLong","error","type","placeholder","onChange","e","target","value","onClick","getWeather","humidityFromCard","pressureFromCard","id","descriptionFromCard","temperatureFromCard","temperatureNumber","slice","src","HighTemperature","LowTemperature","latFromCard","longFromCard","cityFromCard","countryFromCard","cityFromMain","countryFromMain","humidityFromMain","pressureFromMain","descriptionFromMain","temperatureFromMain","latFromMain","longFromMain","cityFromApp","countryFromApp","descriptionFromApp","temperatureFromApp","humidityFromApp","pressureFromApp","latFromApp","longFromApp","cityFromHeader","setCityFromHeader","countryFromHeader","setCountryFromHeader","descriptionFromHeader","setDescriptionFromHeader","temperatureFromHeader","setTemperatureFromHeader","humidityFromHeader","setHumidityFromHeader","pressureFromHeader","setPressureFromHeader","latFromHeader","setLatFromHeader","longFromHeader","setLongFromHeader","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6afd1120.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useState } from 'react'\r\nimport '../style/header.css'\r\nconst axios = require(\"axios\")\r\n\r\n\r\nexport default function (props){\r\n    let [city, setCity] = useState(\"\")\r\n    let [country, setCountry] = useState(\"\")\r\n    let [description, setDescription] = useState(\"\")\r\n    let [temperature, setTemperature] = useState(\"\")\r\n    let [humidity, setHumidity] = useState(\"\")\r\n    let [pressure, setPressure] = useState(\"\")\r\n    let [lat, setLat] = useState(\"\")\r\n    let [long, setLong] = useState(\"\")\r\n\r\n    async function getWeather(name){\r\n        const key = \"523496410ae3af7e2edb43a6fef6b35d\"\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${name}&appid=${key}&lang=pt`\r\n\r\n        try{\r\n            const requisition = await axios(url)\r\n            const data = await requisition.data   \r\n\r\n            const weatherData = await {\r\n                name: data.name,\r\n                country: data.sys.country,\r\n                description: data.weather[0].description,\r\n                lat: data.coord.lat,\r\n                long: data.coord.lon,\r\n                temperature: Number(data.main.temp - 273.15).toFixed(2),\r\n                humidity: data.main.humidity,\r\n                pressure: data.main.pressure\r\n            }\r\n\r\n            await console.log(data)\r\n\r\n            await setCity(city)\r\n            await setCountry(country = weatherData.country)\r\n            await setDescription(description = weatherData.description)\r\n            await setTemperature(temperature = `${weatherData.temperature}°`)\r\n            await setHumidity(humidity = `${weatherData.humidity}%`)\r\n            await setPressure(pressure = `${weatherData.pressure}hPa`)\r\n            await setLat(lat = weatherData.lat)\r\n            await setLong(long = weatherData.long)\r\n\r\n            \r\n            await props.newCity(changeCity())\r\n            await props.newCountry(country)\r\n            await props.newDescription(description)\r\n            await props.newTemperature(temperature)\r\n            await props.newHumidity(humidity)\r\n            await props.newPressure(pressure)\r\n            await props.newLat(lat)\r\n            await props.newLong(long)\r\n\r\n            return true\r\n        }catch (error){\r\n            await setCountry(country = `ERRO`)\r\n            await setCity(city = \"Nome Inválido!\")\r\n            await setDescription(description = \"\")\r\n            await setTemperature(temperature = \"\")\r\n            await setHumidity(humidity = \"\")\r\n            await setPressure(pressure = ``)\r\n            await setLat(lat = \"\")\r\n            await setLong(long = \"\")\r\n            \r\n            await props.newCity(changeCity())\r\n            await props.newCountry(country)\r\n            await props.newDescription(description)\r\n            await props.newTemperature(temperature)\r\n            await props.newHumidity(humidity)\r\n            await props.newPressure(pressure)\r\n            await props.newLat(lat)\r\n            await props.newLong(long)\r\n\r\n            console.error(error)\r\n        }\r\n\r\n    }\r\n\r\n    const getCity = (e) => {\r\n        city = e.target.value\r\n        return city\r\n    }\r\n\r\n    function changeCity() {\r\n        setCity(city)\r\n        return city\r\n    }\r\n\r\n    return(\r\n        <header>\r\n            <input type=\"text\" placeholder=\"TYPE NAME OF CITY\" onChange={getCity}/>\r\n            <button onClick = {() => {\r\n                getWeather(city)\r\n            }}>SEARCH</button>\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\nimport \"../../style/cards/tables.css\"\r\n\r\nexport default function(props) {\r\n        const humidity = props.humidityFromCard\r\n        const pressure = props.pressureFromCard\r\n\r\n        return(\r\n            <div id=\"table-div\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Umidade</th>\r\n                    <th>Pressão</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <td>{humidity}</td>\r\n                    <td>{pressure}</td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        )\r\n}","export default __webpack_public_path__ + \"static/media/high-temperature-image.21ff89ba.png\";","export default __webpack_public_path__ + \"static/media/low-temperature-image.74893342.png\";","import React from 'react';\r\nimport HighTemperature from '../../images/main/card/high-temperature-image.png'\r\nimport LowTemperature from '../../images/main/card/low-temperature-image.png'\r\nimport \"../../style/cards/temperatures.css\"\r\n\r\nexport default function(props) {\r\n    const description = props.descriptionFromCard\r\n    const temperature = props.temperatureFromCard\r\n\r\n    const temperatureNumber = Number(temperature.slice(0,5))\r\n\r\n    if(temperatureNumber > 20){\r\n        console.log(temperatureNumber)\r\n        return(\r\n            <div id=\"temperatures-div\">\r\n                <span>{temperature}<img src={HighTemperature}/></span>\r\n                <span>{description}</span>\r\n            </div>\r\n            )\r\n    }else{\r\n        return(\r\n            <div id=\"temperatures-div\">\r\n                <span>{temperature}<img src={LowTemperature}/></span>\r\n                <span>{description}</span>\r\n            </div>\r\n            )\r\n    }\r\n}","import React from 'react';\r\nimport \"../../style/cards/coordinates.css\"\r\n\r\nexport default function(props) {\r\n        const lat = props.latFromCard\r\n        const long = props.longFromCard\r\n\r\n        return(\r\n        <div id=\"coordinates-div\">\r\n           <span> Lat: {lat}</span>  <span>Long: {long}</span>\r\n        </div>\r\n        )\r\n}","import React from 'react'\r\nimport '../../style/cards/names.css'\r\n\r\n\r\n\r\nexport default function(props){\r\n    const city = props.cityFromCard\r\n    const country = props.countryFromCard\r\n\r\n    return(\r\n        <div id=\"name\">\r\n        <span>{city}</span>\r\n        <span>{country}</span>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport '../style/card.css'\r\nimport Tables from \"./cards/tables\"\r\nimport Temperatures from \"./cards/temperatures\"\r\nimport Coordinates from \"./cards/coordinates\"\r\nimport Names from \"./cards/names\"\r\n\r\nexport default function (props){\r\n    return(\r\n        <div id=\"card\">\r\n            <Names cityFromCard={props.cityFromMain} \r\n            countryFromCard={props.countryFromMain}/>\r\n            <div id=\"dados\">\r\n                <Tables humidityFromCard={props.humidityFromMain} \r\n                pressureFromCard={props.pressureFromMain}/>\r\n                <Temperatures descriptionFromCard={props.descriptionFromMain} \r\n                temperatureFromCard={props.temperatureFromMain}/>\r\n                <Coordinates latFromCard={props.latFromMain} \r\n                longFromCard={props.longFromMain}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"../style/main.css\"\r\nimport Card from './card'\r\n\r\nexport default function(props){\r\n    return(\r\n        <main>\r\n            <Card cityFromMain={props.cityFromApp} countryFromMain={props.countryFromApp} \r\n            descriptionFromMain={props.descriptionFromApp} \r\n            temperatureFromMain={props.temperatureFromApp} \r\n            humidityFromMain={props.humidityFromApp} \r\n            pressureFromMain={props.pressureFromApp}\r\n            latFromMain={props.latFromApp} longFromMain={props.longFromApp}/>\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\nimport './../style/footer.css'\r\n\r\nexport default function(){\r\n    return(\r\n        <footer>\r\n            Wheater app 2021\r\n        </footer>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Header from './header.js'\r\nimport Main from './main.js'\r\nimport Footer from './footer'\r\nimport \"./../style/app.css\"\r\n\r\nexport default function() {\r\n\r\n    let [cityFromHeader, setCityFromHeader] = useState(\"\")\r\n    let [countryFromHeader, setCountryFromHeader] = useState(\"\")\r\n    let [descriptionFromHeader, setDescriptionFromHeader] = useState(\"\")\r\n    let [temperatureFromHeader, setTemperatureFromHeader] = useState(\"0º\")\r\n    let [humidityFromHeader, setHumidityFromHeader] = useState(\"0hPa\")\r\n    let [pressureFromHeader, setPressureFromHeader] = useState(\"0%\")\r\n    let [latFromHeader, setLatFromHeader] = useState(\"0\")\r\n    let [longFromHeader, setLongFromHeader] = useState(\"0\")\r\n\r\n\r\n    function getCity(value){\r\n        setCityFromHeader(cityFromHeader = value)\r\n        return cityFromHeader\r\n    }\r\n\r\n    function getCountry(value){\r\n        setCountryFromHeader(countryFromHeader = value)\r\n        return countryFromHeader\r\n    }\r\n\r\n    function getDescription(value){\r\n        setDescriptionFromHeader(descriptionFromHeader = value)\r\n        return descriptionFromHeader\r\n    }\r\n\r\n    function getTemperature(value){\r\n        setTemperatureFromHeader(temperatureFromHeader = value)\r\n        return temperatureFromHeader\r\n    }\r\n\r\n    function getHumidity(value){\r\n        setHumidityFromHeader(humidityFromHeader = value)\r\n        return humidityFromHeader\r\n    }\r\n\r\n    function getPressure(value){\r\n        setPressureFromHeader(pressureFromHeader = value)\r\n        return pressureFromHeader\r\n    }\r\n\r\n    function getLat(value){\r\n        setLatFromHeader(latFromHeader = value)\r\n        return latFromHeader\r\n    }\r\n\r\n    function getLong(value){\r\n        setLongFromHeader(longFromHeader = value)\r\n        return longFromHeader\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <Header newCity={getCity} newCountry={getCountry} \r\n            newDescription={getDescription} newTemperature={getTemperature} \r\n            newHumidity={getHumidity} newPressure={getPressure}\r\n            newLat={getLat} newLong={getLong}/>\r\n\r\n            <Main cityFromApp={cityFromHeader} countryFromApp={countryFromHeader} \r\n            descriptionFromApp={descriptionFromHeader} \r\n            temperatureFromApp={temperatureFromHeader} \r\n            humidityFromApp={humidityFromHeader} pressureFromApp={pressureFromHeader}\r\n            latFromApp={latFromHeader} longFromApp={longFromHeader}/>\r\n\r\n            <Footer />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './components/app.js'\r\n\r\n\r\nReactDOM.render(\r\n  <App>\r\n  </App>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}